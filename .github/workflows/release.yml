name: Master release

on:
  push:
    branches:
      - master

  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "Release version (e.g., 1.0.0)"
        required: true
      developmentVersion:
        description: "Next development version with SNAPSHOT (e.g., 1.1.0-SNAPSHOT)"
        required: true

jobs:
  master_release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Dependencies
        run: npm install

      - name: Build Angular Application
        run: npm run build

      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "noreply@github.com"

      - name: Update to Release Version
        run: |
          npm version ${{ github.event.inputs.releaseVersion }} --no-git-tag-version
          git add package.json package-lock.json
          git commit -m "[release] Update to version ${{ github.event.inputs.releaseVersion }}"
          git push origin master

      - name: Create and Push Release Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag -a v${{ github.event.inputs.releaseVersion }} -m "Release version ${{ github.event.inputs.releaseVersion }}"
          git push origin v${{ github.event.inputs.releaseVersion }}

      - name: Bump Development Version
        run: |
          npm version ${{ github.event.inputs.developmentVersion }} --no-git-tag-version
          git add package.json package-lock.json
          git commit -m "[release] Bump to next development version ${{ github.event.inputs.developmentVersion }}"
          git push origin master

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Extract Release Notes
        id: extract_notes
        run: |
          RELEASE_VERSION=${{ github.event.inputs.releaseVersion }}
          NOTES=$(awk '/## \['$RELEASE_VERSION'\]/,/^## \[/' CHANGELOG.md | sed '$d' | sed '1d')
          echo "${NOTES}" > release_notes.md
          echo "::set-output name=notes::$(cat release_notes.md)"

      - name: Get Previous Tag
        id: prev_tag
        run: |
          PREVIOUS_TAG=$(git describe --tags $(git rev-list --tags --skip=1 --max-count=1))
          echo "::set-output name=previous_tag::${PREVIOUS_TAG}"

      - name: Create Full Changelog URL
        id: changelog_url
        run: |
          REPO_URL="https://github.com/Engineering-Research-and-Development/true-connector"
          CURRENT_TAG=v${{ github.event.inputs.releaseVersion }}
          PREVIOUS_TAG=${{ steps.prev_tag.outputs.previous_tag }}
          CHANGELOG_URL="${REPO_URL}/compare/${PREVIOUS_TAG}...${CURRENT_TAG}"
          echo "::set-output name=url::${CHANGELOG_URL}"

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          FULL_NOTES="$(cat release_notes.md)\n\n**Full Changelog**: ${{ steps.changelog_url.outputs.url }}"
          gh release create v${{ github.event.inputs.releaseVersion }} --title "Release ${{ github.event.inputs.releaseVersion }}" --notes "${FULL_NOTES}"

      - name: Create A Pull Request
        uses: thomaseizinger/create-pull-request@1.4.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          head: master
          base: develop
          title: Released master into develop
          body: |
            Hi!
            This PR was created in response to a workflow run.
            I've updated the version name and code commit.
